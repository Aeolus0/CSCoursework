
-isDf--
- hosts: Controllers
  remote_user: root
  tasks:
    #TODO: network (NIC) config
    apt: name=ntp state=present
    template: src=  dest=/etc/ntp.conf 
    		# 	  NTP.conf with server {{NTP_SERVER}} iburst
				  # restrict -4 default kod notrap nomodify
      #             restrict -6 default kod notrap nomodify
    service: name=ntp state=restarted
    #Openstack Prereq packages
    apt: name=python-software-properties state=present
    shell: add-apt-repository cloud-archive:juno
    apt: update_cache=yes
    apt: upgrade=dist
    #Openstack Prereq END
    #Openstack Database installation and config
    debconf:
      name: mariadb-server-5.5
      question: "{{ item }}"
      value: "{{ DATABASE_PASS }}"
      vtype: password
    with_items:
      - mysql-server/root_password
      - mysql-server/root_password_again
    apt: name={{ item }} state=present
    with_items:
      - mariadb-server
      - python-mysqldb
    template: src= dest=/etc/mysql/my.cnf
    #TODO: use the debconf module to give a password for mariadb

    # Update /etc/mysql/my.cnf with;
        # [mysqld]
	# ...
	# bind-address = {{local_ip}}
	# default-storage-engine = innodb
	# innodb_file_per_table
	# collation-server = utf8_general_ci
	# init-connect = 'SET NAMES utf8'
	# character-set-server = utf8
  # TODO: add the password to my.cnf to i don't have to auth
    service: name=mysql state=restarted
    shell: mysql_secure_installation
    #Openstack DB END
    #RabbitMQ (Message Broker) setup
    apt: name=rabbitmq-server state=present
    shell: rabbitmqctl change_password guest {{RABBIT_PASS}}
    #For production environments, you should create a unique account with suitable password. For more information on securing the message broker, see the documentation.
	#If you decide to create a unique account with suitable password for your test environment, you must configure the rabbit_userid and rabbit_password keys in the configuration file of each OpenStack service that uses the message broker.
    mysql_db: login_user=root login_password={{ DATABASE_PASS }} name=keystone state=present



